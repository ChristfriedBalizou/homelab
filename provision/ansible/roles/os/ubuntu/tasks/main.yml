---
- name: Raspberry
  block:
    - name: Raspberry | Test for raspberry pi /proc/cpuinfo
      command: grep -E "Raspberry Pi|BCM2708|BCM2709|BCM2835|BCM2836" /proc/cpuinfo
      register: grep_cpuinfo_raspberrypi
      failed_when: false
      changed_when: false
    - name: Raspberry | Test for raspberry pi /proc/device-tree/model
      command: grep -E "Raspberry Pi" /proc/device-tree/model
      register: grep_device_tree_model_raspberrypi
      failed_when: false
      changed_when: false
    - name: Raspberry | Activating cgroup support
      lineinfile:
        path: /boot/firmware/cmdline.txt
        regexp: '^((?!.*\bcgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory\b).*)$'
        line: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory'
        backrefs: true
      when: grep_cpuinfo_raspberrypi.rc == 0
    - name: Raspberry | Enable ARM 64 bit
      lineinfile:
        path: /boot/firmware/config.txt
        search_string: 'arm_64bit=1'
        insertafter: 'EOF'
        line: 'arm_64bit=1'
      when: grep_cpuinfo_raspberrypi.rc == 0
      notify: Reboot
- name: Locale
  block:
    - name: Locale | Set timezone
      community.general.timezone:
        name: "{{ timezone | default('Etc/UTC') }}"
- name: Networking
  block:
    - name: Networking | Set hostname to inventory hostname
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"
    - name: Networking | Update /etc/hosts to include inventory hostname
      ansible.builtin.blockinfile:
        path: /etc/hosts
        block: |
          127.0.1.1   {{ inventory_hostname }}
    - name: Networking | Flush iptables
      ansible.builtin.command: iptables -F
      register: flush_iptables
      failed_when: false
      changed_when: false
    - name: Networking | Correct iptables version selected
      community.general.alternatives:
        name: iptables
        path: /usr/sbin/iptables-legacy
    - name: Networking | Correct ip6tables version selected
      community.general.alternatives:
        name: ip6tables
        path: /usr/sbin/ip6tables-legacy
- name: Packages
  block:
    - name: Packages | Install required packages
      ansible.builtin.apt:
        name: "{{ packages | default([]) }}"
        state: present
        update_cache: true
    - name: Packages | Remove leaf packages
      ansible.builtin.apt:
        autoremove: true
    - name: Packages | Enable automatic downloads of updates
      ansible.builtin.systemd:
        service: unattended-upgrades
        enabled: true
        state: started
- name: User Configuration
  block:
    - name: User Configuration | Add additional SSH public keys
      ansible.posix.authorized_key:
        user: "{{ ansible_user }}"
        key: "{{ item }}"
      loop: "{{ public_ssh_keys | default([]) }}"
- name: System Configuration (1)
  block:
    - name: System Configuration (1) | Disable firewalld
      ansible.builtin.systemd:
        service: firewalld.service
        enabled: false
        masked: true
        state: stopped
    - name: System Configuration (1) | Enable fstrim
      ansible.builtin.systemd:
        service: fstrim.timer
        enabled: true
- name: System Configuration (2)
  block:
    - name: System Configuration (2) | Enable kernel modules on boot
      ansible.builtin.copy:
        mode: 0644
        content: "{{ item }}"
        dest: "/etc/modules-load.d/{{ item }}.conf"
      loop: [br_netfilter, overlay, rbd]
    - name: System Configuration (2) | Set sysctls
      ansible.posix.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_file: /etc/sysctl.d/99-kubernetes.conf
        reload: true
      with_dict: "{{ sysctl_config }}"
      vars:
        sysctl_config:
          net.ipv4.ip_forward: 1
          net.ipv4.conf.all.forwarding: 1
          net.ipv4.conf.all.rp_filter: 0
          net.ipv4.conf.default.rp_filter: 0
          net.ipv6.conf.all.forwarding: 1
          net.bridge.bridge-nf-call-iptables: 1
          net.bridge.bridge-nf-call-ip6tables: 1
          fs.inotify.max_user_watches: 524288
          fs.inotify.max_user_instances: 512
    - name: System Configuration (2) | Disable swap
      ansible.builtin.dnf:
        name: zram-generator-defaults
        state: absent
    - name: System Configuration (2) | Permissive SELinux
      ansible.posix.selinux:
        state: permissive
        policy: targeted
  notify: Reboot
