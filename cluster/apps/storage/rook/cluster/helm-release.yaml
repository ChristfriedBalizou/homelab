---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-cluster
  namespace: storage
spec:
  interval: 10m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.10.7
      sourceRef:
        kind: HelmRepository
        name: rook-charts
        namespace: flux-system
  dependsOn:
    - name: rook-ceph
      namespace: storage
  values:
    toolbox:
      enabled: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - k8s-3
    operatorNamespace: storage
    monitoring:
      enabled: true
      createPrometheusRules: false
    ingress:
      dashboard:
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/auth-url: https://auth.${SECRET_DOMAIN}/oauth2/auth?allowed_groups=admin
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/oauth2/start
          external-dns/is-public: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:nas"
        ingressClassName: nginx
        host:
          name: &host rook.${SECRET_DOMAIN}
          path: /
        tls:
          - hosts:
              - *host
            secretName: "rook-tls"
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          allowedTopologies: []
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: storage
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: storage
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: storage
            csi.storage.k8s.io/fstype: ext4
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              limits:
                cpu: "1000m"
                memory: "1Gi"
              requests:
                cpu: "500m"
                memory: "500m"
            priorityClassName: system-cluster-critical
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: storage
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: storage
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: storage
            csi.storage.k8s.io/fstype: ext4

    cephClusterSpec:
      crashCollector:
        disable: true
      mon:
        count: 3
      placement:
        osd:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/hostname
                      operator: In
                      values:
                        - k8s-3
      storage:
        useAllNodes: false
        useAllDevice: false
        nodes:
          - name: k8s-1
            devices:
              - name: "sdb"
          - name: k8s-3
            devices:
              - name: "sdb"
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
      network:
        provider: host
      resources:
        mon:
          limits:
            cpu: "1000m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
        osd:
          limits:
            cpu: "1000m"
            memory: "2Gi"
          requests:
            cpu: "1000m"
            memory: "1Gi"
