---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: cloudnative-pg
      namespace: storage
  values:
    controllers:
      paperless:
        initContainers:
          01-init-db:
              image:
                repository: ghcr.io/home-operations/postgres-init
                tag: 17
                pullPolicy: IfNotPresent
              env:
                INIT_POSTGRES_DBNAME: paperless
                INIT_POSTGRES_HOST: &postgres postgres-lb.storage.svc.cluster.local
                INIT_POSTGRES_USER:
                  valueFrom:
                    secretKeyRef:
                      name: cluster-paperless-secrets
                      key: "PAPERLESS_DBUSER"
                INIT_POSTGRES_PASS:
                  valueFrom:
                    secretKeyRef:
                      name: cluster-paperless-secrets
                      key: "PAPERLESS_DBPASS"
                INIT_POSTGRES_SUPER_PASS: "${POSTGRES_SUPER_PASS}"
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.16.3@sha256:5622c95b4e22c6b95d4791563d8ace03ae16e3147e2cdf2016b938dc9341d30a
            env:
              PAPERLESS_APPS: allauth.socialaccount.providers.openid_connect
              PAPERLESS_URL: https://paperless.${SECRET_DOMAIN}
              PAPERLESS_TIME_ZONE: ${TIMEZONE}
              PAPERLESS_WEBSERVER_WORKERS: "2"
              PAPERLESS_TASK_WORKERS: "2"
              PAPERLESS_ACCOUNT_ALLOW_SIGNUPS: "false"
              PAPERLESS_SOCIALACCOUNT_ALLOW_SIGNUPS: "true"
              PAPERLESS_CONSUMPTION_DIR: /data/nas/consume
              PAPERLESS_DATA_DIR: /data/local/data
              PAPERLESS_EXPORT_DIR: /data/nas/export
              PAPERLESS_MEDIA_ROOT: /data/local/media
              PAPERLESS_CONSUMER_POLLING: "60"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              PAPERLESS_OCR_LANGUAGE: fra+eng
              PAPERLESS_DBHOST: *postgres
              PAPERLESS_REDIS: redis://dragonfly.storage.svc.cluster.local:6379/3
              USERMAP_UID: "568"
              USERMAP_GID: "568"
            envFrom:
              - secretRef:
                  name: cluster-paperless-secrets
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                memory: 2Gi

    service:
      app:
        controller: paperless
        ports:
          http:
            port: 8000

    ingress:
      app:
        className: external
        annotations:
          external-dns.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/group: "Tools"
          hajimari.io/icon: "arcticons:paperless"
        hosts:
          - host: &host paperless.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: paperless-production-tls
    persistence:
      data:
        existingClaim: media-default
        globalMounts:
          - subPath: paperless
            path: /data/local
      nas:
        existingClaim: apps-default  # this directory is backup every so
        globalMounts:
          - subPath: paperless
            path: /data/nas
