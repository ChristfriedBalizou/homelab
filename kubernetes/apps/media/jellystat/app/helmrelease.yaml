---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellystat
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      jellystat:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            fsGroup: 65534
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.3
            env:
              INIT_POSTGRES_DBNAME: &db jellystat
              INIT_POSTGRES_HOST: &postgres postgresql.storage.svc.cluster.local
              INIT_POSTGRES_USER: &postgres_user
                valueFrom:
                  secretKeyRef:
                    name: cluster-media-secrets
                    key: "JELLYSTAT_0_POSTGRES_USER"
              INIT_POSTGRES_PASS: &postgres_pass
                valueFrom:
                  secretKeyRef:
                    name: cluster-media-secrets
                    key: "JELLYSTAT_0_POSTGRES_PASSWORD"
              INIT_POSTGRES_SUPER_PASS: "${POSTGRES_SUPER_PASS}"
        containers:
          app:
            image:
              repository: cyfershepard/jellystat
              tag: 1.1.0@sha256:92d5cd58779828bb06df982ca735e8e15bb6ab9ba749c0965296946e30428641
            env:
              POSTGRES_PORT: "5432"
              POSTGRES_IP: *postgres
              POSTGRES_PASSWORD: *postgres_pass
              POSTGRES_USER: *postgres_user
              POSTGRES_DB: *db
              JWT_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: cluster-media-secrets
                    key: "JELLYSTAT_0_JWT_SECRET"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 10m
                memory: 200Mi
              limits:
                memory: 500Mi
    service:
      app:
        controller: jellystat
        ports:
          http:
            port: 3000
    ingress:
      app:
        className: external
        annotations:
          external-dns.home.arpa/enabled: "true"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: 'true'
          hajimari.io/icon: oui:stats
          hajimari.io/group: Media
        hosts:
          - host: jellystat.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      backup:
        enabled: true
        existingClaim: apps-media
        advancedMounts:
          jellystat:
            app:
              - subPath: jellystat
                path: /app/backend/backup-data
