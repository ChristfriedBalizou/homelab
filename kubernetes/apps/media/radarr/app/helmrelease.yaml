---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: radarr
  namespace: media
spec:
  interval: 10m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: postgresql
      namespace: storage
  values:
    controllers:
      main:
        pod:
          podSecurityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 100
        initContainers:
          01-init-db:
              image:
                repository: ghcr.io/onedr0p/postgres-init
                tag: 16.1
              imagePullPolicy: IfNotPresent
              env:
                INIT_POSTGRES_DBNAME: radarr radarr-log
                INIT_POSTGRES_HOST: &postgres postgresql.storage.svc.cluster.local
                INIT_POSTGRES_USER:
                  valueFrom:
                    secretKeyRef:
                      name: cluster-media-secrets
                      key: "RADARR_0_POSTGRES_USER"
                INIT_POSTGRES_PASS:
                  valueFrom:
                    secretKeyRef:
                      name: cluster-media-secrets
                      key: "RADARR_0_POSTGRES_PASSWORD"
                INIT_POSTGRES_SUPER_PASS: "${POSTGRES_SUPER_PASS}"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.2.4.8328@sha256:9908d5e7ef16122cfdf80fa0d1fefef743cc598346bc12c3408e645d99012c74
            env:
              TZ: ${TIMEZONE}
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 80
              RADARR__LOG_LEVEL: info
              RADARR__POSTGRES_HOST: &postgres
              RADARR__POSTGRES_MAIN_DB: "radarr"
              RADARR__POSTGRES_LOG_DB: "radarr-log"
              RADARR__AUTHENTICATION_METHOD: "External"
              RADARR__POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: cluster-media-secrets
                    key: "RADARR_0_POSTGRES_PASSWORD"
              RADARR__POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: cluster-media-secrets
                    key: "RADARR_0_POSTGRES_USER"
              RADARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: cluster-media-secrets
                    key: "RADARR_0_API_KEY"
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 2000Mi
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          external-dns.home.arpa/enabled: "true"
          auth.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/auth-snippet: |-
            proxy_set_header X-Forwarded-Method $request_method;
            if ( $http_user_agent ~* "Prowlarr" ) {
              return 200;
            }
          hajimari.io/enable: 'true'
          hajimari.io/icon: mdi:filmstrip
          hajimari.io/group: Media
        hosts:
          - host: "radarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  path: http
        tls:
          - hosts:
              - "radarr.${SECRET_DOMAIN}"
            secretName: radarr-tls
    persistence:
      config:
        enabled: true
        existingClaim: apps-media
        globalMounts:
          - subPath: radarr
      media:
        enabled: true
        existingClaim: media
