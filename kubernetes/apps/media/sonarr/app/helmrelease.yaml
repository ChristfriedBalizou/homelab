---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 10m
  chart:
    spec:
      chart: app-template
      version: 1.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: ghcr.io/onedr0p/sonarr-develop
      tag: 4.0.0.484@sha256:9193a7e3cd0b1f7f4f1eda1b1465f842cfbb05b7e8a6778a4f61902ae6baf42b
    env:
      TZ: ${TIMEZONE}
      SONARR__INSTANCE_NAME: Sonarr
      SONARR__PORT: &port 80
      SONARR__LOG_LEVEL: info
      SONARR__POSTGRES_HOST: "postgresql.storage"
      SONARR__POSTGRES_MAIN_DB: "sonarr"
      SONARR__POSTGRES_LOG_DB: "sonarr-log"
      SONARR__POSTGRES_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: cluster-media-secrets
            key: "SONARR_0_POSTGRES_PASSWORD"
      SONARR__POSTGRES_USER:
        valueFrom:
          secretKeyRef:
            name: cluster-media-secrets
            key: "SONARR_0_POSTGRES_USER"
      SONARR__API_KEY:
        valueFrom:
          secretKeyRef:
            name: cluster-media-secrets
            key: "SONARR_0_API_KEY"
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/auth-snippet: |
            if ( $http_user_agent ~* "Prowlarr" ) {
              return 200;
            }

            if ( $proxy_upstream_name ~* "media\-(sonarr|radarr|prowlarr|jellyfin|jellyseerr)" ) {
              return 200;
            }
          nginx.ingress.kubernetes.io/auth-url: https://auth.${SECRET_DOMAIN}/oauth2/auth?allowed_groups=admin
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/oauth2/start
          hajimari.io/enable: 'true'
          hajimari.io/icon: mdi:television-classic
          hajimari.io/group: Media
        hosts:
          - host: "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "sonarr.${SECRET_DOMAIN}"
            secretName: sonarr-tls
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
    persistence:
      config:
        enabled: true
        existingClaim: config-sonarr
      media:
        enabled: true
        mountPath: /media
        existingClaim: media
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
