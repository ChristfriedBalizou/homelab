---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home-automation
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      home-assistant:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/home-assistant
              tag: 2025.3.3@sha256:911d89f0c6dfa54c3cc0d79bc538796259e3374fe561f2cfdbc728822bf016d7
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                memory: 1Gi
          code-server:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.98.2@sha256:9ed588a05d4e81aa464e753a409bc3b2b93267323d1c3975fbddf6f9aef84c26
            args:
              - "--auth"
              - "none"
              - "--user-data-dir"
              - "/config/.vscode"
              - "--extensions-dir"
              - "/config/.vscode"
              - "/config"
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
    service:
      app:
        controller: home-assistant
        ports:
          http:
            port: 8123
          code-server:
            port: 8080
    ingress:
      app:
        className: external
        annotations:
          external-dns.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/group: "Home Automation"
          hajimari.io/icon: "mdi:home-assistant"
          nginx.ingress.kubernetes.io/custom-http-errors: 400,404,405,409,410,411,412,413,414,415,416,417,418,421,425,431,451,500,501,502,503,504,505,506,510
        hosts:
          - host: &host hass.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: hass-production-tls
      code-server:
        className: internal
        annotations:
          external-dns.home.arpa/enabled: "false"
          hajimari.io/enable: "true"
          hajimari.io/group: "Home Automation"
          hajimari.io/icon: "mingcute:vscode-line"
          # disabled for 404
          nginx.ingress.kubernetes.io/custom-http-errors: 400,403,405,409,410,411,412,413,414,415,416,417,418,421,425,431,451,500,501,502,503,504,505,506,510
        hosts:
          - host: &code hass-code.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: code-server
        tls:
          - hosts:
              - *code
            secretName: code-production-tls
    persistence:
      config:
        enabled: true
        existingClaim: apps-home-automation
        globalMounts:
          - subPath: home-assistant
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts
      tmp:
        type: emptyDir
