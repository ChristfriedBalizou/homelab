---
session:
  redis:
    high_availability:
      sentinel_name: redis-master
      nodes:
        - host: redis-node-0.redis-headless.database.svc.cluster.local
          port: 26379
        - host: redis-node-1.redis-headless.database.svc.cluster.local
          port: 26379
        - host: redis-node-2.redis-headless.database.svc.cluster.local
          port: 26379

access_control:
  default_policy: two_factor
  networks:
    - name: internal
      networks:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
  rules:
    - domain:
        - sonarr.${SECRET_DOMAIN}
        - radarr.${SECRET_DOMAIN}
        - readarr.${SECRET_DOMAIN}
        - prowlarr.${SECRET_DOMAIN}
      resources: ["^/api"]
      policy: bypass
      query:
        - - operator: "pattern"
            key: "apikey"
            value: "${SONARR_API_KEY}"
        - - operator: "pattern"
            key: "apikey"
            value: "${RADARR_API_KEY}"
        - - operator: "pattern"
            key: "apikey"
            value: "${READARR_API_KEY}"
        - - operator: "pattern"
            key: "apikey"
            value: "${PROWLARR_API_KEY}"

    - domain: kromgo.${SECRET_DOMAIN}
      policy: bypass
      query:
        - - operator: "pattern"
            key: "apikey"
            value: "${KROMGO_AUTHELIA_APIKEY}"

    - domain:
        - hajimari.${SECRET_DOMAIN}
        - k8s-1.${SECRET_DOMAIN}
        - k8s-2.${SECRET_DOMAIN}
        - k8s-3.${SECRET_DOMAIN}
        - k8s-4.${SECRET_DOMAIN}
        - k8s-5.${SECRET_DOMAIN}
        - status.${SECRET_DOMAIN}
        - kubernetes.${SECRET_DOMAIN}
        - prometheus.${SECRET_DOMAIN}
        - nzbget.${SECRET_DOMAIN}
        - sonarr.${SECRET_DOMAIN}
        - radarr.${SECRET_DOMAIN}
        - prowlarr.${SECRET_DOMAIN}
        - readarr.${SECRET_DOMAIN}"
        - thanos.${SECRET_DOMAIN}
        - loki.${SECRET_DOMAIN}
        - minio.${SECRET_DOMAIN}
        - prometheus.${SECRET_DOMAIN}
        - alertmanager.${SECRET_DOMAIN}
        - grafana.${SECRET_DOMAIN}
        - kromgo.${SECRET_DOMAIN}
      policy: two_factor
      subject:
        - ["group:admin"]

    - domain: "calibre.${SECRET_DOMAIN}"
      policy: two_factor
      subject:
        - ["group:admin"]
        - ["group:ebook"]

identity_providers:
  oidc:
    cors:
      endpoints: ["authorization", "token", "revocation", "introspection"]
      allowed_origins_from_client_redirect_uris: true
    clients:
      - id: grafana
        description: Grafana
        secret: "${GRAFANA_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://grafana.${SECRET_DOMAIN}/login/generic_oauth"]
        userinfo_signed_response_alg: none
      - id: pgadmin
        description: PG Admin
        secret: "${PG_OAUTH2_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://pgadmin.${SECRET_DOMAIN}/oauth2/authorize"]
        userinfo_signing_algorithm: none
