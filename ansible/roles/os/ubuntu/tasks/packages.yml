---
- name: Check if it is a Raspberry Pi
  ansible.builtin.shell: cat /proc/cpuinfo | grep -q 'Raspberry Pi'
  register: is_raspberry_pi
  changed_when: false

- name: Upgrade all system packages
  ansible.builtin.apt:
    upgrade: full
    update_cache: true
    cache_valid_time: 3600
    autoclean: true
    autoremove: true
  register: apt_upgrade
  retries: 5
  until: apt_upgrade is success
  ignore_errors: true

- name: Packages | Install required packages
  ansible.builtin.apt:
    name: "{{ ubuntu.packages | default([]) }}"
    state: present
    update_cache: true
  when: is_raspberry_pi.rc != 0

- name: Packages | Remove leaf packages
  ansible.builtin.apt:
    autoremove: true

- name: Packages | Copy 20auto-upgrades unattended-upgrades config
  ansible.builtin.blockinfile:
    path: /etc/apt/apt.conf.d/20auto-upgrades
    mode: 0644
    create: true
    block: |
      APT::Periodic::Update-Package-Lists "1";
      APT::Periodic::Download-Upgradeable-Packages "1";
      APT::Periodic::AutocleanInterval "7";
      APT::Periodic::Unattended-Upgrade "1";

- name: Packages | Copy 50unattended-upgrades unattended-upgrades config
  ansible.builtin.blockinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    mode: 0644
    create: true
    block: |
      Unattended-Upgrade::Automatic-Reboot "false";
      Unattended-Upgrade::Remove-Unused-Dependencies "true";
      Unattended-Upgrade::Allowed-Origins {
          "${distro_id} stable";
          "${distro_id} ${distro_codename}-security";
          "${distro_id} ${distro_codename}-updates";
      };

- name: Packages | Start unattended-upgrades service
  ansible.builtin.systemd:
    name: unattended-upgrades
    enabled: true
    state: started
  when: is_raspberry_pi.rc != 0

- name: Packages | Restart unattended-upgrades service
  ansible.builtin.service:
    name: unattended-upgrades.service
    daemon_reload: true
    enabled: true
    state: restarted
  when: is_raspberry_pi.rc != 0
