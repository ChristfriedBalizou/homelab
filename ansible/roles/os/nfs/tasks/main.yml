---
- name: Install and configure NFS on master node
  block:
    - name: Install required packages
      ansible.builtin.apt:
        name: "nfs-kernel-server"
        state: present
        update_cache: true

    - name: Mount device from fstab
      ansible.posix.mount:
        path: "{{ item.mount }}"
        src: "{{ item.device }}"
        fstype: "{{ item.fstype }}"
        state: present
      loop: "{{ nfs_devices }}"

    - name: Configure NFS server
      ansible.builtin.lineinfile:
        regexp: "^{{ item.mount }}"
        path: /etc/exports
        state: present
        line: "{{ item.mount }} *(rw,no_root_squash,insecure,async,no_subtree_check,anonuid=1000,anongid=1000)"
      loop: "{{ nfs_devices }}"

    - name: Export nfs config
      ansible.builtin.command: exportfs -ra

    - name: Start nfs-kernel-server
      ansible.builtin.systemd:
        name: nfs-kernel-server.service
        enabled: true
        state: started
      failed_when: false

    - name: Create applications config folders
      ansible.builtin.file:
        path: "{{ media.applications.mount }}/{{ item }}"
        state: directory
        mode: '0766'
      loop: "{{ media.applications.folders }}"

    - name: Create persistence folders
      ansible.builtin.file:
        path: "{{ media.persistence.mount }}/{{ item }}"
        state: directory
        mode: '0766'
      loop: "{{ media.persistence.folders }}"
  when:
    - k3s_control_node is defined
    - k3s_control_node

- name: Mount NFS on workers fstab
  block:
    - name: Install required packages
      ansible.builtin.apt:
        name: "nfs-common"
        state: present
        update_cache: true

    - name: Mount nfs device from fstab
      ansible.posix.mount:
        path: "{{ item.mount }}"
        src: "{{ item.host }}:{{ item.mount }}"
        fstype: "{{ item.fstype }}"
        opts: "rw"
        state: mounted
      loop: "{{ nfs_devices }}"
  when:
    - k3s_control_node is defined
    - k3s_control_node is false

- name: Configure and install admin monitors
  block:
    - name: Recursively change ownership of drive mount directory
      ansible.builtin.file:
        path: "{{ item.mount }}"
        state: directory
        recurse: true
        mode: "0766"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      loop: "{{ nfs_devices }}"
