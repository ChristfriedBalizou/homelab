---
- name: Install and configure NFS on master node
  block:
    - name: Install required packages
      ansible.builtin.apt:
        name: "nfs-kernel-server"
        state: present
        update_cache: true

    - name: Check available device to mount
      ansible.builtin.command: lsblk {{ item.device }} -no UUID
      loop: "{{ nfs_devices }}"
      register: uuid

    - name: Format block device to ext4
      community.general.filesystem:
        fstype: "{{ item.item.fstype }}"
        dev: "{{ item.item.device }}"
      loop: "{{ uuid.results }}"

    - name: Check available device to mount
      ansible.builtin.command: lsblk {{ item.device }} -no UUID
      loop: "{{ nfs_devices }}"
      register: uuid

    - name: Mount device from fstab
      ansible.posix.mount:
        path: "{{ item.item.mount }}"
        src: "UUID={{ item.stdout_lines[0] }}"
        fstype: "{{ item.item.fstype }}"
        state: present
      when: item.stdout_lines
      loop: "{{ uuid.results }}"

    - name: Configure NFS server
      ansible.builtin.lineinfile:
        regexp: "^{{ item.item.mount }}"
        path: /etc/exports
        state: present
        line: "{{ item.item.mount }} *(rw,all_squash,insecure,async,no_subtree_check,anonuid=1000,anongid=1000)"
      when: item.stdout_lines
      loop: "{{ uuid.results }}"

    - name: Start nfs-kernel-server
      ansible.builtin.systemd:
        name: nfs-kernel-server.service
        enabled: true
        state: started
      failed_when: false
  when:
    - k3s_control_node is defined
    - k3s_control_node

- name: Mount NFS on workers fstab
  block:
    - name: Mount nfs device from fstab
      ansible.posix.mount:
        path: "{{ item.mount }}"
        src: "{{ item.host }}:{{ item.mount }}"
        fstype: "{{ item.fstype }}"
        opts: "rw"
        state: mounted
      loop: "{{ nfs_devices }}"
  when:
    - k3s_control_node is defined
    - k3s_control_node is false

- name: Fix mounted directories permission
  block:
    - name: Recursively change ownership of drive mount directory
      ansible.builtin.file:
        path: "{{ item.mount }}"
        state: directory
        recurse: true
        mode: "0766"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      loop: "{{ nfs_devices }}"
